# ============================================================================
# FastFood Subspace Merging Configuration
# Supports multiple merging functions including EMA with adaptive Î²_t
# ============================================================================

_target_: fusion_bench.method.fastfood_merging.FastfoodSubspaceMergeAlgorithm

# ============================================================================
# Core FastFood Parameters
# ============================================================================
proj_ratio: 0.75              # Subspace compression ratio (0.0-1.0)
use_G: false                  # Use Gaussian scaling in FastFood transform
device: "cuda"                # Computation device
block_rows: 16384             # Memory management for large tensors

# ============================================================================
# Weight Matching Preprocessing (Optional - Git Re-Basin)
# ============================================================================
use_weight_matching: false    # Enable weight matching to align neurons before merging
weight_matching_max_iter: 100 # Maximum iterations for weight matching optimization
weight_matching_seed: 0       # Random seed for reproducibility
weight_matching_verbose: true # Print progress during weight matching
weight_matching_input_shapes: # Custom input shapes for permutation spec generation
  - [1, 3, 224, 224]          # Default: vision model (batch=1, RGB, 224x224)
                                # For NLP: [[1, 512]] or similar

# ============================================================================
# Subspace Configuration
# ============================================================================
subspace_scope: "global"     # per_tensor | per_flat_tensor | layer | global
                              # - per_tensor: row-wise projection (standard)
                              # - per_flat_tensor: flatten 2D to (out*in), one projection
                              # - layer: layer-wise shared projection
                              # - global: single global projection for all params
merge_where: "subspace"       # subspace | postlift

# ============================================================================
# Merging Strategy
# ============================================================================
merge_func: "signmax"         # sum | mean | max | signmax | ema | ties_sum | ties_mean | ties_max
align_mode: "none"            # none | ties | tadrop

# ============================================================================
# EMA Parameters (Active when merge_func="ema")
# ============================================================================
ema_task_order: "custom"       # given | random | cosine_similarity | custom
ema_gamma: 2.0 #1.2                # Sigmoid scaling factor (0.5-2.0)
ema_w_c: 0.8 #0.6                  # Cosine alignment weight (0.0-1.0)
ema_w_s: 0.2 #0.4                  # Scale ratio weight (0.0-1.0, w_c + w_s = 1.0)
ema_custom_order: 
  - "SUN397"
  - "Stanford-Cars" 
  - "DTD"
  - "GTSRB"
  - "SVHN"
  - "MNIST"
  - "RESISC45"
  - "EuroSAT"

# ============================================================================
# TIES Merging Options (when merge_func starts with "ties_")
# Note: TIES implementation skips the Trim phase (no parameter pruning)
# and focuses on Elect phase (sign resolution) + Disjoint Merge phase
# ============================================================================
# ties_sum:  Elect majority sign per parameter, then sum agreeing task vectors
# ties_mean: Elect majority sign per parameter, then mean of agreeing task vectors  
# ties_max:  Elect majority sign per parameter, then max magnitude with correct sign

# ============================================================================
# Advanced Alignment Options
# ============================================================================
ties_trim_pct: 0.0            # TIES pruning percentage (0.0-1.0)
tadrop_tau: 0.0               # Task Arithmetic dropout threshold

# ============================================================================
# TSV-Style Linear/Non-Linear Separation
# ============================================================================
only_project_linear: false    # If true, only 2D tensors are projected; 1D tensors merged with mean in original space
                              # This mimics TSV behavior: linear layers (weights) use subspace, non-linear (biases, norms) use mean

# ============================================================================
# Post-processing Options
# ============================================================================
use_pareto: false             # Apply Pareto frontier optimization
use_rescale: false            # Rescale merged parameters
weights: null                 # Task importance weights [w1, w2, ..., wN]
scale: 1.0                    # Global scaling factor

# ============================================================================
# Integrated Analysis Options
# ============================================================================
run_analysis: false          # Whether to run analysis after merging (disabled for SLURM workflow control)
analysis_methods: [merged_task_vector, task_vector_similarity, task_vector_layer]
          # List of analysis methods to run
                             # Options: merged_task_vector, task_vector_similarity, task_vector_layer
analysis_output_path: null    # Path for analysis outputs (uses fabric logger if null)

# ============================================================================
# Task Arithmetic Reconstruction mode
# ============================================================================
use_task_arithmetic_reconstruction: false
task_arithmetic_scaling: 1.0  # Standard TA scaling factor
report_reconstruction_error: true  # Report reconstruction error after projection